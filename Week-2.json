{"cells":[{"cell_type":"markdown","metadata":{"id":"o8EZzfwXhzJp"},"source":["#  Python Scripting Language\n","\n","## Week 2, Basic Syntax and Visualization  "]},{"cell_type":"code","execution_count":1,"metadata":{"id":"RWawWm_GhzJr","executionInfo":{"status":"ok","timestamp":1664253593711,"user_tz":-480,"elapsed":5102,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"6a468f40-5ff2-4356-a2eb-a44e91ec8289","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting watermark\n","  Downloading watermark-2.3.1-py2.py3-none-any.whl (7.2 kB)\n","Requirement already satisfied: importlib-metadata>=1.4 in /usr/local/lib/python3.7/dist-packages (from watermark) (4.12.0)\n","Requirement already satisfied: ipython in /usr/local/lib/python3.7/dist-packages (from watermark) (7.9.0)\n","Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=1.4->watermark) (4.1.1)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=1.4->watermark) (3.8.1)\n","Collecting jedi>=0.10\n","  Downloading jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)\n","\u001b[K     |████████████████████████████████| 1.6 MB 4.9 MB/s \n","\u001b[?25hRequirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython->watermark) (2.6.1)\n","Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython->watermark) (4.8.0)\n","Requirement already satisfied: prompt-toolkit<2.1.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from ipython->watermark) (2.0.10)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython->watermark) (0.7.5)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython->watermark) (57.4.0)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.7/dist-packages (from ipython->watermark) (0.2.0)\n","Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.7/dist-packages (from ipython->watermark) (5.1.1)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython->watermark) (4.4.2)\n","Requirement already satisfied: parso<0.9.0,>=0.8.0 in /usr/local/lib/python3.7/dist-packages (from jedi>=0.10->ipython->watermark) (0.8.3)\n","Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.1.0,>=2.0.0->ipython->watermark) (1.15.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.1.0,>=2.0.0->ipython->watermark) (0.2.5)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect->ipython->watermark) (0.7.0)\n","Installing collected packages: jedi, watermark\n","Successfully installed jedi-0.18.1 watermark-2.3.1\n"]}],"source":["# standard method to install Python package\n","\n","!pip install watermark"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"-aXLPSzyhzJs","executionInfo":{"status":"ok","timestamp":1664253593712,"user_tz":-480,"elapsed":4,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}}},"outputs":[],"source":["%load_ext watermark"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"be2l-vIrhzJt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664253747236,"user_tz":-480,"elapsed":837,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"7894ff1e-53b6-421d-d7ec-1545116b1234"},"outputs":[{"output_type":"stream","name":"stdout","text":["Python implementation: CPython\n","Python version       : 3.7.14\n","IPython version      : 7.9.0\n","\n","numpy     : 1.21.6\n","scipy     : 1.7.3\n","matplotlib: 3.2.2\n","sympy     : 1.7.1\n","\n","Compiler    : GCC 7.5.0\n","OS          : Linux\n","Release     : 5.10.133+\n","Machine     : x86_64\n","Processor   : x86_64\n","CPU cores   : 2\n","Architecture: 64bit\n","\n"]}],"source":["%watermark -v -m -p numpy,scipy,matplotlib,sympy"]},{"cell_type":"markdown","metadata":{"id":"wZQfAg8EhzJt"},"source":["## Basic Syntax"]},{"cell_type":"markdown","metadata":{"id":"6OVo_dGYhzJt"},"source":["* `Arithmatic operators`: ` +, -, *, /, //,**, %, ==, ... `"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"0IZjion6hzJt","executionInfo":{"status":"ok","timestamp":1664253750689,"user_tz":-480,"elapsed":7,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}}},"outputs":[],"source":["a=5\n","b=2"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"KbrFWhy7hzJu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664253753755,"user_tz":-480,"elapsed":3,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"56a51cc3-222a-42be-9918-11535c8eaac3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7, 10, 2.5, 2, 32)"]},"metadata":{},"execution_count":12}],"source":["a+b, a*b,a/b,a//b,b**a"]},{"cell_type":"markdown","metadata":{"id":"Nbh5blB3hzJu"},"source":["* `variable` and `symbolic operation`: By famous <font color=\"blue\">sympy</font> package;"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"Tf8oHPhohzJv","colab":{"base_uri":"https://localhost:8080/","height":38},"executionInfo":{"status":"ok","timestamp":1664253774932,"user_tz":-480,"elapsed":9,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"bc3589b1-c331-4575-81b4-68996fb6d2f0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["x + 1"],"text/latex":"$\\displaystyle x + 1$"},"metadata":{},"execution_count":17}],"source":["x+1"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"l6hoeLtWhzJv","executionInfo":{"status":"ok","timestamp":1664253767583,"user_tz":-480,"elapsed":5,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}}},"outputs":[],"source":["from sympy import symbols, solve ,sqrt"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"xbKJF15jhzJv","colab":{"base_uri":"https://localhost:8080/","height":38},"executionInfo":{"status":"ok","timestamp":1664253772294,"user_tz":-480,"elapsed":415,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"2e0fd6d7-9ef7-4e59-8e1d-c034a755efab"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["x + 1"],"text/latex":"$\\displaystyle x + 1$"},"metadata":{},"execution_count":16}],"source":["x=symbols(\"x\")\n","x+1"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"4g_rXln7hzJw","colab":{"base_uri":"https://localhost:8080/","height":37},"executionInfo":{"status":"ok","timestamp":1664253809372,"user_tz":-480,"elapsed":1796,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"602bc6b1-2422-4752-f3b6-1a23e5558475"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["sqrt(x)"],"text/latex":"$\\displaystyle \\sqrt{x}$"},"metadata":{},"execution_count":18}],"source":["sqrt(x)"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"e4nLMN5XhzJw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664253810649,"user_tz":-480,"elapsed":8,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"b183c97a-e66f-4eff-b764-bcb4fc64b207"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[-1/2 - sqrt(3)*I/2, -1/2 + sqrt(3)*I/2]"]},"metadata":{},"execution_count":19}],"source":["solve(x**2+x+1,real=True)"]},{"cell_type":"code","source":["?solve"],"metadata":{"id":"S5ot5DWntB-W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x=symbols(\"x\")\n","y=symbols(\"y\")\n","solve([2*x+3*y-10,5*x-7*y-13])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O8E-dU4rqBZn","executionInfo":{"status":"ok","timestamp":1663807819511,"user_tz":-480,"elapsed":286,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"3f930cbe-1a58-44fc-8078-67d11597485c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{x: 109/29, y: 24/29}"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I5KAwSRPhzJw"},"outputs":[],"source":["t=symbols(\"t\", real=True)"]},{"cell_type":"code","source":["?solve"],"metadata":{"id":"6AJhYoJcpcc-"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bNlhbB-ThzJw"},"outputs":[],"source":["solve(t**2+t+1)"]},{"cell_type":"code","source":["a=1\n"," b=2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":132},"id":"XKddLkhft8Gw","executionInfo":{"status":"error","timestamp":1663808593371,"user_tz":-480,"elapsed":11,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"ca86ad06-b4b8-4b1c-d6b5-25965cd5c79b"},"execution_count":null,"outputs":[{"output_type":"error","ename":"IndentationError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-36-10ad0167fbea>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    b=2\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"]}]},{"cell_type":"markdown","metadata":{"id":"uVLdT-4ChzJw"},"source":["* define function: input  <font color=\"brown\">var1</font>, pass   <font color=\"gray\">x</font> to <font color=\"brown\">var2</font> if no var2 input, and return  <font color=\"pink\">result</font> ,\n","    ```\n","    def func(var1,var2=x):\n","        ...\n","        return result\n","    ```    "]},{"cell_type":"markdown","metadata":{"id":"CJQDf649hzJw"},"source":["* condition statments\n","  ```\n","    if cond1: \n","          ...\n","       elif cond2:\n","          ...\n","       else:\n","          ...\n","   ```"]},{"cell_type":"markdown","metadata":{"id":"JuOd4Bz-hzJx"},"source":["* while statement:\n","    ```\n","     while( condition):\n","        ...\n","    ```    "]},{"cell_type":"markdown","metadata":{"id":"A6rleoW2hzJx"},"source":["* for statement:\n","    ```\n","    for (...):\n","     ...\n","    ``` "]},{"cell_type":"markdown","metadata":{"id":"DMl4wekmhzJx"},"source":["Formating\n","---"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1QFHG-PXhzJx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663809172407,"user_tz":-480,"elapsed":436,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"ba3b5245-cecb-4a7a-a58a-43a54ed7c207"},"outputs":[{"output_type":"stream","name":"stdout","text":["sum = 3,difference = -1,product = 2, quotient= 0.50\n"]}],"source":["print(\"sum = %s,difference = %s,product = %s, quotient= %.2f\" %(a+b,a-b,a*b,a/b))"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"1XHwjZCKhzJx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664253699386,"user_tz":-480,"elapsed":626,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"42838029-c469-4632-d219-dab25fb4205f"},"outputs":[{"output_type":"stream","name":"stdout","text":["sum = 5, difference =-1,product = 6, quotient= 0.67\n"]}],"source":["a=2\n","b=3\n","print(\"sum = {}, difference ={},product = {}, quotient= {:.2f}\".format(a+b,a-b,a*b,a/b))"]},{"cell_type":"code","source":["name=\"巫岳謙\"\n","print(\"My name is %s\"%(name))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OIwa6KKtw5lX","executionInfo":{"status":"ok","timestamp":1664253594943,"user_tz":-480,"elapsed":620,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"d762cbb7-38e1-4ea2-bfae-bbee315bc781"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["My name is 巫岳謙\n"]}]},{"cell_type":"code","source":["name=\"巫岳謙\"\n","number=\"B1102049\"\n","print(\"My name is\",name,\"and my sequence number is\",number)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I9Q8cbleyb0D","executionInfo":{"status":"ok","timestamp":1664253703990,"user_tz":-480,"elapsed":4,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"cf67d9d6-d3a3-4aec-ac58-491bd80583d1"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["My name is 巫岳謙 and my sequence number is B1102049\n"]}]},{"cell_type":"code","execution_count":5,"metadata":{"id":"e8b76RCdhzJx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664253701548,"user_tz":-480,"elapsed":11,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"d7d0a358-b735-4977-d00b-e5aaf676e742"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":5}],"source":["def iseven(x):\n","    return x%2==0\n","\n","iseven(798)"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"nc08wzZrhzJx","executionInfo":{"status":"ok","timestamp":1664253702874,"user_tz":-480,"elapsed":1,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}}},"outputs":[],"source":["def tax(x):\n","    if x<680000.:\n","        print( \"Tax is 0.\")\n","    elif x<1200000:\n","        print(\"Tax is %g\" %float(x*0.06-22800))\n","    else:\n","        print(\"TeX is %s\" % float(x*0.12-136000))"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"J9hT0-G7hzJy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664253708597,"user_tz":-480,"elapsed":508,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"596a79a2-4b3f-4de4-a20d-4a3ab1c7dcd9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tax is 37200\n"]}],"source":["tax(1000000)"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"bURlUB7whzJy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664253712296,"user_tz":-480,"elapsed":1845,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"f3656d82-0182-4ad4-f3ca-85e3f9eb476a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Time elapsed:  1.2013530731201172\n","Summation of consecutive natual numbers from 1 to 10000000 is 50000005000000.\n"]}],"source":["# add time module to sum a sequence of consecutive integers \n","import time\n","sum=0\n","n=10000000\n","\n","t0=time.time()\n","for i in range(n+1):\n","    sum+=i\n","    #sum =sum+1\n","print(\"Time elapsed: \", time.time()-t0)\n","print (\"Summation of consecutive natual numbers from 1 to %d is %d.\" %(n,sum))"]},{"cell_type":"markdown","metadata":{"id":"geoCnqb3hzJy"},"source":[" NumPy: core of Python Scientific Computing\n","---\n","It contains among other things:\n","\n","    * a powerful N-dimensional array object\n","    * sophisticated (broadcasting) functions\n","    * tools for integrating C/C++ and Fortran code\n","    * useful linear algebra, random number capabilities,  and Fourier transform.\n"]},{"cell_type":"markdown","metadata":{"id":"hc1U6F60hzJy"},"source":["Import Packages\n","---\n","- `import numPy`: prepare numpt to use;\n","```\n","import numpy \n","numpy.sin(numpy.pi)\n","```\n","get 0\n"]},{"cell_type":"markdown","metadata":{"id":"rMq2LwmGhzJy"},"source":["- `import numpy as numpy`: give the nicknme\n","```\n","import numpy as np\n","np.sin(np.pi)\n","```\n","get 0\n"]},{"cell_type":"markdown","metadata":{"id":"HMfOvvwAhzJy"},"source":["- `from numpy import *`: import all the staff into Python environment, not prefered:\n","```\n","import numpy \n","sin(pi)\n","```\n","get 0\n"]},{"cell_type":"markdown","metadata":{"id":"tW4FI8WchzJy"},"source":["- `from numpy import sin`: import only one numpy function, <code style=\"background-color:lightblue\">sin</code>:  \n","```\n","import numpy  as np\n","from numpy import sin\n","sin(np.pi)\n","```\n","get 0"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9fN5fp95hzJy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663811438470,"user_tz":-480,"elapsed":448,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"ef7292ce-ca02-4547-da3d-caa4e25766ef"},"outputs":[{"output_type":"stream","name":"stdout","text":["Time elapsed (Numpy version):  0.04312920570373535\n","Summation of consecutive natual numbers from 1 to 10000000 is 50000005000000.\n"]}],"source":["import numpy as np\n","import time\n","n=10000000\n","\n","t0=time.time()\n","a=np.linspace(0,n,n+1)\n","sum=np.sum(a)\n","print(\"Time elapsed (Numpy version): \", time.time()-t0)\n","print ('Summation of consecutive natual numbers from 1 to %d is %d.' %(n,sum))"]},{"cell_type":"code","source":["np.linspace(0,10,11)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F337UGM44BX0","executionInfo":{"status":"ok","timestamp":1663811288110,"user_tz":-480,"elapsed":286,"user":{"displayName":"Jacky Eric","userId":"02804336319702648754"}},"outputId":"755815fc-6826-48c8-ab81-ed66104feb3b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.])"]},"metadata":{},"execution_count":72}]},{"cell_type":"markdown","metadata":{"id":"T507P897hzJz"},"source":["## Exercise\n","\n","What is the 10000 term of Fibonicci sequence?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W_cnS2qZhzJz"},"outputs":[],"source":["def fibonicci(n):\n","    if n<2:\n","       return 1\n","    else:\n","       return  fibonicci(n-1)+fibonicci(n-2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EGLfhdq2hzJz"},"outputs":[],"source":["def fibonicci1(n):\n","    if n<0:\n","       print(\" Wrong integer input, input a nonnegative integer!\")\n","    elif n<2:\n","       a,b=1,1\n","    else:\n","       a,b=1,1\n","       for i in range(n): \n","           a,b=b, a+b\n","    return b"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0mPq_cHnhzJz"},"outputs":[],"source":["fibonicci1(10000)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"L2kh4IuPhzJz"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"g4vBhICJhzJz"},"outputs":[],"source":["import sys\n","print(sys.getrecursionlimit())\n","#sys.setrecursionlimit(1500)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lJs4kANjhzJz"},"outputs":[],"source":["\n","fibonicci(20)"]},{"cell_type":"markdown","metadata":{"id":"R0T89-zMhzJ0"},"source":["## Moreover\n","\n","Besides its obvious scientific uses, NumPy can also be used as an efficient multi-dimensional container of generic data. Arbitrary data-types can be defined and this allows NumPy to seamlessly and speedily integrate with a wide variety of projects."]},{"cell_type":"markdown","metadata":{"id":"AzQdfhTKhzJ0"},"source":["## Matplotlib\n","\n","Matplotlib is an excellent 2D and 3D graphics library for generating scientific figures. Some of the many advantages of this library include:\n","\n","* Easy to get started\n","* Support for $\\LaTeX$ formatted labels and texts\n","* Great control of every element in a figure, including figure size and DPI. \n","* High-quality output in many formats, including PNG, PDF, SVG, EPS, and PGF.\n","* GUI for interactively exploring figures *and* support for headless generation of figure files (useful for batch jobs).\n"]},{"cell_type":"markdown","metadata":{"id":"z8T1cUj0hzJ0"},"source":["One of the of the key features of matplotlib that I would like to emphasize, and that I think makes matplotlib highly suitable for generating figures for scientific publications is that all aspects of the figure can be controlled *programmatically*. This is important for reproducibility and convenient when one needs to regenerate the figure with updated data or change its appearance. \n","\n","More information at the Matplotlib web page: http://matplotlib.org/"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RBbcPx2nhzJ0"},"outputs":[],"source":["# the following \"matplotlib\" magic  actives the embedded function if any picture created. \n","\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import tw_matplotlib\n","from numpy import sin,cos,pi\n","\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4XkYX5_IhzJ0"},"outputs":[],"source":["x=np.linspace(-2,2,1000)\n","f=x*np.sin(1/x)\n","plt.plot(x,f);"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nm6gtjlwhzJ0"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2UbEarUfhzJ0"},"outputs":[],"source":["x=np.linspace(-2,2,1000)\n","g=np.sin(x)\n","plt.plot(x,f,'r-',x,g,'b--',lw=2);"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iB-I8DBXhzJ0"},"outputs":[],"source":["\n","fig,ax =plt.subplots(figsize=(8,8))\n","t=np.linspace(0,2*np.pi,1000)\n","\n","r=2\n","x=r*np.cos(t)\n","y=r*np.sin(t)\n","\n","ax.plot(x,y,'b--',lw=2);\n","\n","ax.plot([-3,3],[0,0],'k',lw=4)\n","ax.plot([0,0],[-3,3],'k',lw=4)\n","\n","ax.plot([0,np.sqrt(2),np.sqrt(2),0],[0,np.sqrt(2),0,0],'r')\n","ax.text(1.6,0.5,r'$y=r \\sin\\theta$',fontsize=16)\n","ax.text(0.3,-0.3,r'$x=r \\cos\\theta$',fontsize=16)\n","ax.text(0.4,0.1,r'$\\theta$',fontsize=16)\n","ax.text(0.6,0.8,r'$r$',fontsize=18,rotation=45)\n","\n","ax.plot([np.sqrt(2)],[np.sqrt(2)],'ko',lw=20)\n","ax.text(np.sqrt(2.2),np.sqrt(2),r'$P=(x,y)$',fontsize=16)\n","\n","ax.set_xlim([-3,3])\n","ax.set_ylim([-3,3])\n","\n","ax.set_title(\"Polar Coordinates\",fontsize=20)\n","ax.grid()\n","ax.set_frame_on(False)  "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PDa_rd1uhzJ0"},"outputs":[],"source":["fig,ax =plt.subplots(figsize=(8,8))\n","t=np.linspace(0,2*np.pi,1000)\n","\n","r=2\n","x=r*np.cos(t)\n","y=r*np.sin(t)\n","\n","ax.plot(x,y,'b--',lw=2);\n","\n","ax.plot([-3,3],[0,0],'k',lw=4)\n","ax.plot([0,0],[-3,3],'k',lw=4)\n","\n","ax.plot([0,np.sqrt(2),np.sqrt(2),0],[0,np.sqrt(2),0,0],'r')\n","ax.text(1.6,0.5,r'$y=r \\sin\\theta$',fontsize=16)\n","ax.text(0.3,-0.3,r'$x=r \\cos\\theta$',fontsize=16)\n","ax.text(0.4,0.1,r'$\\theta$',fontsize=16)\n","ax.text(0.6,0.8,r'$r$',fontsize=18,rotation=45)\n","\n","ax.plot([np.sqrt(2)],[np.sqrt(2)],'ko',lw=20)\n","ax.text(np.sqrt(2.2),np.sqrt(2),r'$P=(x,y)$',fontsize=16)\n","\n","ax.set_xlim([-3,3])\n","ax.set_ylim([-3,3])\n","\n","ax.set_title(\"Polar Coordinates, 極座標\",fontsize=20)\n","ax.grid()\n","ax.set_frame_on(False)  "]},{"cell_type":"markdown","metadata":{"id":"NLllHLu-hzJ1"},"source":["Animation\n","---\n","Just like cartoon's animation effect:\n","        \n","        Play one frame by one frame \n","        \n","Making animation by Python is quiet easy: by `moviepy`.\n","\n","Here we make a simple animation example by connecting the position of Earth and one of Venus and observe what happens.\n","\n","moviepy\n","---\n","Process animation by moviepy: \n","```\n","from moviepy.editor import VideoClip\n","\n","# total playing time (by second)\n","duration=...\n","# make frame at time t\n","def make_frame(t):\n","    ...\n","\n","animation = VideoClip(make_frame, duration=duration)\n","```"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_c7u07X1hzJ1"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I8S_kicFhzJ1"},"outputs":[],"source":["from numpy import sin,cos,pi\n","from moviepy.editor import VideoClip\n","from moviepy.video.io.bindings import mplfig_to_npimage\n","import tw_matplotlib"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vxQINhLchzJ1"},"outputs":[],"source":["duration=2\n","fig,ax = plt.subplots(figsize=(8,8));\n","\n","def make_frame(t):\n","    ax.clear()\n","    # make squared visuasation\n","    ax.set_xlim([-1.5,1.5])\n","    ax.set_ylim([-1.5,1.5])\n","    alpha=1-t/duration\n","    size=(64-32*(alpha))\n","    ax.text(0,0,'A',fontsize=size,alpha=alpha)\n","\n","    return mplfig_to_npimage(fig)\n","\n","animation = VideoClip(make_frame, duration=duration)\n","animation.ipython_display(fps=20, loop=False, autoplay=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RVQkMMoMhzJ1"},"outputs":[],"source":["x1,x2,y1,y2=0,1,0,1\n","t1=365.256   # one year for Earth \n","t2=224.701   # one year for Venus\n","R1=149.6     # 1,000,000 km distance between Earth and Sun\n","R2=108.21    # 1,000,000 km distance between Venus and Sun\n","Ratio=R1/R2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YDWcI0GihzJ1"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RLareWJjhzJ1"},"outputs":[],"source":["def CartesianE(n,  R=Ratio):\n","    x=[]\n","    theta= 8*2*pi/t1;\n","    for i in range(n):\n","        x += [R*cos(i*theta),R*sin(i*theta)]\n","    return x\n","\n","def CartesianV(n,  R=1):\n","    x=[]\n","    theta= 8*2*pi/t2;\n","    for i in range(n):\n","        x += [R*cos(i*theta),R*sin(i*theta)]\n","    return x"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yD1fopb3hzJ1"},"outputs":[],"source":["days=7\n","n=100\n","\n","ob= n*days\n","\n","P=CartesianE(ob)\n","Q=CartesianV(ob)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9gDPclZrhzJ1"},"outputs":[],"source":["# make lines at which connect consecutive positions\n","PP=[[P[2*k],Q[2*k]] for k in np.arange(400)];\n","QQ=[[P[2*k+1],Q[2*k+1]] for k in np.arange(400)];\n","\n","# total playing time\n","duration=len(PP)//20\n","# fames per seconds\n","fps=20\n","\n","\n","fig, ax = plt.subplots(figsize=(8,8)); \n","ax.clear()\n","def make_frame(t):\n","    # the number of frame\n","    k=int(t*fps)\n","    # make squared visuasation\n","    ax.set_xlim([-1.5,1.5])\n","    ax.set_ylim([-1.5,1.5])\n","    #ax.set_frame_on(False)\n","    #ax.set_axis_off()\n","    ax.plot(PP[k],QQ[k],color='0.2',alpha=0.3)\n","    ax.set_title(\"Five-leaf Rose, 五瓣玫瑰\",fontsize=20)\n","\n","    return mplfig_to_npimage(fig)\n","\n","\n","animation = VideoClip(make_frame, duration=duration)\n","animation.ipython_display(fps=20, loop=False, autoplay=False)\n","#animation.write_gif('matplotlib.gif', fps=20)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zbD_nfYnhzJ1"},"outputs":[],"source":["animation.ipython_display?"]},{"cell_type":"markdown","metadata":{"id":"RvXfnxjFhzJ2"},"source":["## How comes  5-leaf Rose\n","\n","**Eight** Earth years is approximated to **thirteen** Venus ywars: \n","\n","```\n","How amazing:\n","    Eight times of  distance between Earth and Sun is approximated to eleven times \n","    of  distance between Venus and Sun.\n","```\n","\n","Thinking Homework\n","---\n","\n","```\n","  How do you think about these two numbers: 8 and 11?\n","```"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"naLBIRwqhzJ2"},"outputs":[],"source":["print(t1*8, t2*13)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bb0Ibnl2hzJ2"},"outputs":[],"source":[]}],"metadata":{"celltoolbar":"Slideshow","hide_input":false,"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}